#!/usr/bin/env bash
set -euo pipefail

usage() {
  cat <<'EOF'
Użycie: robotctl <cmd> [unit]
  cmd:
    start        - uruchom wszystkie (broker, voice, chat)
    stop         - zatrzymaj wszystkie
    restart      - restart wszystkich
    status       - status wszystkich
    enable       - włącz autostart
    disable      - wyłącz autostart
    logs [unit]  - pokaż logi (-f), domyślnie voice (unit: broker|voice|chat)

Przykłady:
  robotctl start
  robotctl logs voice
  robotctl enable
EOF
}

units=("robot-broker.service" "robot-voice.service" "robot-chat.service")

scmd() { systemctl --user "$@"; }

case "${1:-}" in
  start)
    scmd daemon-reload
    for u in "${units[@]}"; do scmd start "$u" || true; done
    ;;
  stop)
    for u in "${units[@]}"; do scmd stop "$u" || true; done
    ;;
  restart)
    scmd daemon-reload
    for u in "${units[@]}"; do scmd restart "$u" || true; done
    ;;
  status)
    for u in "${units[@]}"; do scmd status "$u" --no-pager || true; done
    ;;
  enable)
    scmd daemon-reload
    for u in "${units[@]}"; do scmd enable "$u" || true; done
    ;;
  disable)
    for u in "${units[@]}"; do scmd disable "$u" || true; done
    ;;
  logs)
    unit="${2:-voice}"
    case "$unit" in
      broker) u="robot-broker.service" ;;
      voice)  u="robot-voice.service" ;;
      chat)   u="robot-chat.service" ;;
      *) echo "Nieznana jednostka: $unit"; exit 1 ;;
    esac
    journalctl --user -u "$u" -f -o cat
    ;;
  ""|-h|--help|help)
    usage
    ;;
  *)
    usage; exit 1
    ;;
esac


