[Unit]
Description=Rider-Pi API (HTTP/SSE)
After=network-online.target
Wants=network-online.target
# (opcjonalnie, gdy masz te usługi w systemie)
# After=rider-broker.service rider-web-bridge.service
# Wants=rider-broker.service rider-web-bridge.service
StartLimitIntervalSec=30
StartLimitBurst=10

[Service]
Type=simple
User=pi
Group=pi
WorkingDirectory=/home/pi/robot

# Zewnętrzne pliki z env (nadpisują Environment= poniżej, jeśli istnieją)
EnvironmentFile=-/etc/default/rider
EnvironmentFile=-/etc/default/rider-api

# Serwer API
ExecStart=/usr/bin/python3 -u -m services.api_server

Restart=always
RestartSec=0.5
TimeoutStartSec=10
TimeoutStopSec=5
KillMode=process
KillSignal=SIGINT
Nice=-5
StandardOutput=journal
StandardError=journal

# --- API (musi wystawić :8080) ---
Environment=API_HOST=0.0.0.0
Environment=API_PORT=8080

# --- Proxy do mostka ruchu (GET /api/move -> :8081) ---
Environment=WEB_BRIDGE_URL=http://127.0.0.1:8081

# --- Zgaś kolizję UART z motion-bridge (telemetria RO z API wyłączona) ---
Environment=ENABLE_XGO_RO=0
# (jeśli kiedyś chcesz RO: ustaw na 1 i wskaż inny port niż /dev/ttyAMA0)
# Environment=XGO_RO_PORT=/dev/ttyUSB0

# --- BUS (jeśli API publikuje eventy/SSE z BUS) ---
Environment=BUS_PUB_PORT=5555
Environment=BUS_SUB_PORT=5556
Environment=BUS_RCVHWM=100
Environment=BUS_CONFLATE=0

[Install]
WantedBy=multi-user.target

