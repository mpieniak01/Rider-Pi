[Unit]
Description=Rider-Pi Obstacle detector (ROI on edges -> bus/state)
After=network-online.target rider-edge-preview.service
Wants=network-online.target rider-edge-preview.service
StartLimitIntervalSec=30
StartLimitBurst=10

[Service]
Type=simple
User=pi
Group=pi
WorkingDirectory=/home/pi/robot
EnvironmentFile=-/etc/default/rider
EnvironmentFile=-/etc/default/rider-obstacle

# Źródło klatek (proc z edge-preview)
Environment=SNAP_DIR=/home/pi/robot/snapshots
Environment=PROC_PATH=/home/pi/robot/snapshots/proc.jpg

# ROI + progi (dół obrazu)
Environment=ROI_Y0=0.55
Environment=ROI_H=0.40
# min. udział krawędzi / pikseli w ROI (prosty próg alarmu)
Environment=EDGE_AREA_PCT=0.04
Environment=EDGE_PIX_MIN=3500

# publikacja do bus/state (jeśli obstacle_roi.py to wspiera)
Environment=PUBLISH=1

ExecStart=/usr/bin/python3 -u apps/vision/obstacle_roi.py
Restart=always
RestartSec=0.5
TimeoutStartSec=10
TimeoutStopSec=5
KillMode=process
KillSignal=SIGINT
StandardOutput=journal
StandardError=journal

[Install]
WantedBy=multi-user.target
